{"version":3,"sources":["api.ts","reducer.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","initialState","listTodos","check","user","checkTodo","filter","filterBySearch","reducer","state","action","type","list","userId","todo","GlobalContext","createContext","obj","StateProvider","children","useReducer","dispatch","Provider","value","TodoList","useContext","chooseUser","id","response","filterSearch","search","array","el","title","toLowerCase","includes","returnListTodo","useMemo","result","completed","className","map","classNames","onClick","TodoFilter","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","href","name","App","useState","load","setLoad","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.3670189c.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { createContext, useReducer } from 'react';\nimport { Todo } from './types/Todo';\nimport { User } from './types/User';\n\ntype State = {\n  listTodos: Todo[],\n  check: number | null,\n  user: User | null,\n  checkTodo: Todo | null,\n  filter: string,\n  filterBySearch: string\n};\n\nexport type Action =\n    { type: 'RequestListTodos', list: Todo[] }\n    | { type: 'CheckedUser', userId: number | null }\n    | { type: 'InfoUser', user: User | null }\n    | { type: 'CheckedTodo', todo: Todo | null }\n    | { type: 'TypeFilter', filter: string }\n    | { type: 'SearchLine', filter: string };\n\nexport const initialState: State = {\n  listTodos: [],\n  check: null,\n  user: null,\n  checkTodo: null,\n  filter: 'all',\n  filterBySearch: '',\n};\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case 'RequestListTodos':\n      return {\n        ...state,\n        listTodos: action.list,\n      };\n    case 'CheckedUser':\n      return {\n        ...state,\n        check: action.userId,\n      };\n    case 'InfoUser':\n      return {\n        ...state,\n        user: action.user,\n      };\n    case 'CheckedTodo':\n      return {\n        ...state,\n        checkTodo: action.todo,\n      };\n    case 'TypeFilter':\n      return {\n        ...state,\n        filter: action.filter,\n      };\n    case 'SearchLine':\n      return {\n        ...state,\n        filterBySearch: action.filter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport const GlobalContext = createContext<\n[State, React.Dispatch<Action>]\n>([initialState, (obj:Action) => obj]);\n\nconst StateProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n\n  return (\n    <GlobalContext.Provider value={[state, dispatch]}>\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n\nexport default StateProvider;\n","import classNames from 'classnames';\nimport React, { useContext, useMemo } from 'react';\nimport { getUser } from '../../api';\nimport { GlobalContext } from '../../reducer';\n\nimport { Todo } from '../../types/Todo';\n\nexport const TodoList: React.FC = () => {\n  const [state, dispatch] = useContext(GlobalContext);\n\n  const chooseUser = (id: number) => {\n    dispatch({ type: 'CheckedUser', userId: id });\n    getUser(id)\n      .then(response => dispatch({ type: 'InfoUser', user: response }));\n  };\n\n  const filterSearch = (search: string, array: Todo[]) => {\n    if (search) {\n      return array\n        .filter((el: Todo) => el.title.toLowerCase()\n          .includes(state.filterBySearch.toLowerCase()));\n    }\n\n    return array;\n  };\n\n  const returnListTodo = useMemo(() => {\n    const result = [...state.listTodos];\n\n    if (state.filter === 'active') {\n      return filterSearch(state.filterBySearch, result)\n        .filter((el: Todo) => !el.completed);\n    }\n\n    if (state.filter === 'completed') {\n      return filterSearch(state.filterBySearch, result)\n        .filter((el: Todo) => el.completed);\n    }\n\n    return filterSearch(state.filterBySearch, result);\n  }, [state.filter, state.filterBySearch]);\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {\n          returnListTodo.map((el: Todo) => {\n            return (\n              <tr\n                data-cy=\"todo\"\n                className={classNames('', {\n                  'has-background-info-light': state.checkTodo === el,\n                })}\n                key={el.id}\n              >\n                <td className=\"is-vcentered\">{el.id}</td>\n                <td className=\"is-vcentered\">\n                  {\n                    el.completed && (\n                      <span className=\"icon\" data-cy=\"iconCompleted\">\n                        <i className=\"fas fa-check\" />\n                      </span>\n                    )\n                  }\n                </td>\n                <td className=\"is-vcentered is-expanded\">\n                  <p className={classNames('', {\n                    'has-text-danger': !el.completed,\n                    'has-text-success': el.completed,\n                  })}\n                  >\n                    {el.title}\n\n                  </p>\n                </td>\n                <td className=\"has-text-right is-vcentered\">\n                  <button\n                    data-cy=\"selectButton\"\n                    className=\"button\"\n                    type=\"button\"\n                    onClick={() => {\n                      dispatch({ type: 'CheckedTodo', todo: el });\n                      chooseUser(el.userId);\n                    }}\n                  >\n                    <span className=\"icon\">\n                      <i className={classNames('far', {\n                        'fa-eye-slash': state.checkTodo === el,\n                        'fa-eye': state.checkTodo !== el,\n                      })}\n                      />\n                    </span>\n                  </button>\n                </td>\n              </tr>\n            );\n          })\n        }\n      </tbody>\n    </table>\n  );\n};\n","import { useContext } from 'react';\nimport { GlobalContext } from '../../reducer';\n\nexport const TodoFilter = () => {\n  const [state, dispatch] = useContext(GlobalContext);\n\n  const onChangeHandler = (\n    event: React.ChangeEvent<HTMLSelectElement>,\n  ) => {\n    dispatch({ type: 'TypeFilter', filter: event.target.value });\n  };\n\n  const onChangeSearch = (\n    event: React.ChangeEvent<HTMLInputElement>,\n  ) => {\n    dispatch({ type: 'SearchLine', filter: event.target.value });\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={state.filter}\n            onChange={onChangeHandler}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={state.filterBySearch}\n          onChange={onChangeSearch}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {state.filterBySearch && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => dispatch({ type: 'SearchLine', filter: '' })}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../../reducer';\nimport { Loader } from '../Loader';\n\nexport const TodoModal: React.FC = () => {\n  const [state, dispatch] = useContext(GlobalContext);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!state.user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${state.checkTodo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                dispatch({ type: 'CheckedUser', userId: null });\n                dispatch({ type: 'InfoUser', user: null });\n                dispatch({ type: 'CheckedTodo', todo: null });\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {state.checkTodo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {state.checkTodo?.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {state.user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useContext, useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { GlobalContext } from './reducer';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\n\nexport const App: React.FC = () => {\n  const [state, dispatch] = useContext(GlobalContext);\n  const [load, setLoad] = useState(false);\n\n  useEffect(() => {\n    setLoad(true);\n    getTodos().then(response => {\n      dispatch({ type: 'RequestListTodos', list: response });\n      setLoad(false);\n    });\n  }, []);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter />\n            </div>\n\n            <div className=\"block\">\n              {load ? <Loader /> : <TodoList />}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {state.check && <TodoModal />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\nimport StateProvider from './reducer';\n\nReactDOM.render(\n  <StateProvider>\n    <App />\n  </StateProvider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}